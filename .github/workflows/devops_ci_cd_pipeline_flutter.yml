#Author: Kai Oswald
#Source: https://dev.to/kaos/complete-cicd-for-flutter-apps-42dc

name: Build Flutter apps

on:
  push:
    branches:
      - '*'
    tags:
      - v*
      - dev*
  pull_request:

jobs:
#  test:
  #    runs-on: macos-latest
  #
  #    steps:
  #      - name: Checkout
  #        uses: actions/checkout@v2
  #
  #      - name: Get Flutter
  #        uses: subosito/flutter-action@v1.5.3
  #        with:
  #          channel: 'stable'
  #
  #      - name: Install Dependencies
  #        run: flutter packages get
  #
  #      - name: Analyze
  #        run: flutter analyze lib test
  #
  #      - name: Run tests
  #        run: flutter test --no-pub --machine --coverage --test-randomize-ordering-seed random test

  test:
    name: Test w/ Sonar
    runs-on: ubuntu-latest
    permissions: read-all

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Install Dependencies
        run: flutter packages get

      - name: Analyze
        run: flutter analyze lib test

      - name: Run tests
        run: flutter test --no-pub --machine --coverage --test-randomize-ordering-seed random test > tests.output

      - name: Add flutter to path
        run: |
          which flutter >> $GITHUB_PATH

      - name: Sonar Analyze
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        # If you wish to fail your job when the Quality Gate is red, uncomment the
        # following lines. This would typically be used to fail a deployment.
        # - uses: sonarsource/sonarqube-quality-gate-action@master
        #   timeout-minutes: 5
        #   env:
        #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build_android:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Build Android App
        run: flutter build apk

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/dev')
        with:
          name: android
          path: build/app/outputs/**/*.apk

      # Disabled since currently not maintainable
      #  build_ios:
      #    runs-on: macos-latest
      #    needs: test
      #
      #    steps:
      #      - name: Checkout
      #        uses: actions/checkout@v2
      #
      #      - name: Get Flutter
      #        uses: subosito/flutter-action@v1.5.3
      #        with:
      #          channel: 'stable'
      #
      #      - name: Build iOS App
      #        run: |
      #          flutter build ios --no-codesign
      #          cd build/ios/iphoneos
      #          mkdir Payload
      #          cd Payload
      #          ln -s ../Runner.app
      #          cd ..
      #          zip -r app.ipa Payload
      #
      #- name: Archive Production Artifact
      #  uses: actions/upload-artifact@master
      #  if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/dev')
      #  with:
      #    name: ios
      #    path: build/ios/iphoneos/app.ipa

  build_web:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get Flutter
        uses: subosito/flutter-action@v1.5.3
        with:
          channel: 'stable'

      - name: Build web
        run: |
          flutter build web
          cd build/web
          zip -r web-app.zip .

      - name: Archive Production Artifact
        if: startsWith(github.ref, 'refs/tags/v') || startsWith(github.ref, 'refs/tags/dev')
        uses: actions/upload-artifact@master
        with:
          name: web
          path: build/web/web-app.zip

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ build_android, build_web ] #[ build_android, build_ios, build_web ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          path: build/

      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'build/**/*.apk,build/**/app.ipa,build/**/web-app.zip'

  deploy_web_dev:
    if: startsWith(github.ref, 'refs/tags/dev') || startsWith(github.ref, 'refs/tags/v')
    needs: build_web
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web
          path: build/web

      - name: Extract Artifact
        run: 7z x build/web/web-app.zip -obuild/web/web-app -r

      - name: Deploy with rsync
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github-actions
          chmod 600 ~/.ssh/github-actions
          rsync -avzr --delete -e "ssh -4 -p ${{ secrets.SSH_PORT }} -i ~/.ssh/github-actions -o StrictHostKeyChecking=no" build/web/web-app/ ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }}:/var/www/html/recycling_dev/
          ssh -4 -p ${{ secrets.SSH_PORT }} -i ~/.ssh/github-actions -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }} 'chmod -R 755 /var/www/html/recycling_dev/'
          rm ~/.ssh/github-actions

  deploy_web_prod:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [ release, deploy_web_dev ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: web
          path: build/web

      - name: Extract Artifact
        run: 7z x build/web/web-app.zip -obuild/web/web-app -r

      - name: Deploy with rsync
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/github-actions
          chmod 600 ~/.ssh/github-actions
          rsync -avzr --delete -e "ssh -4 -p ${{ secrets.SSH_PORT }} -i ~/.ssh/github-actions -o StrictHostKeyChecking=no" build/web/web-app/ ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }}:/var/www/html/recycling_prod/
          ssh -4 -p ${{ secrets.SSH_PORT }} -i ~/.ssh/github-actions -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.ssh_host }} 'chmod -R 755 /var/www/html/recycling_prod/'
          rm ~/.ssh/github-actions

# TODO: Add deployment to Google Play Store
